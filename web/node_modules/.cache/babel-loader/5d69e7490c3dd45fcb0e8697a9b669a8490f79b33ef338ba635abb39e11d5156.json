{"ast":null,"code":"var _jsxFileName = \"/Users/maurex/Development/cultuurhoek/app/web/src/modules/calandar/Calendar.tsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarDate = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-size: 20px;\n  text-align: center;\n  background-color: #f5f5f5;\n  border-radius: 20px;\n  height: 100px;\n  width: 100px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #ccc;\n  }\n\n  .date-title {\n    font-size: 12px;\n    text-align: center;\n    padding: 5px;\n    color: #333;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  .event-title {\n    font-size: 10px;\n    text-align: center;\n    padding: 5px;\n    color: #777;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n_c = CalendarDate;\nexport const Calendar = _ref => {\n  let {\n    events\n  } = _ref;\n  // assuming events are sorted by date in ascending order\n  const startDate = new Date(events[0].date);\n  const endDate = new Date(events[events.length - 1].date);\n  const monthLength = endDate.getDate();\n  const firstDayOfMonth = new Date(startDate.getFullYear(), startDate.getMonth(), 1).getDay();\n  const calendarDays = [];\n  for (let i = 1; i <= monthLength; i++) {\n    calendarDays.push({\n      date: i\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(CalendarWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(CalendarDay, {\n      children: \"Sun\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CalendarDay, {\n      children: \"Mon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CalendarDay, {\n      children: \"Tue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CalendarDay, {\n      children: \"Wed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CalendarDay, {\n      children: \"Thu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CalendarDay, {\n      children: \"Fri\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CalendarDay, {\n      children: \"Sat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), Array.from({\n      length: firstDayOfMonth\n    }, (_, i) => /*#__PURE__*/_jsxDEV(\"div\", {}, `empty-${i}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)), calendarDays.map((day, i) => {\n      const date = new Date(startDate.getFullYear(), startDate.getMonth(), i + 1);\n      const eventsOnDate = events.filter(event => event.date === date.toISOString().substr(0, 10));\n      return /*#__PURE__*/_jsxDEV(CalendarDate, {\n        children: [day.date, eventsOnDate.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: eventsOnDate.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: event.title\n          }, event.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this)]\n      }, `date-${i}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Calendar;\nexport default Calendar;\nvar _c, _c2;\n$RefreshReg$(_c, \"CalendarDate\");\n$RefreshReg$(_c2, \"Calendar\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","CalendarDate","div","_c","Calendar","_ref","events","startDate","Date","date","endDate","length","monthLength","getDate","firstDayOfMonth","getFullYear","getMonth","getDay","calendarDays","i","push","CalendarWrapper","children","CalendarDay","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","_","map","day","eventsOnDate","filter","event","toISOString","substr","title","id","_c2","$RefreshReg$"],"sources":["/Users/maurex/Development/cultuurhoek/app/web/src/modules/calandar/Calendar.tsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst CalendarDate = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  font-size: 20px;\n  text-align: center;\n  background-color: #f5f5f5;\n  border-radius: 20px;\n  height: 100px;\n  width: 100px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #ccc;\n  }\n\n  .date-title {\n    font-size: 12px;\n    text-align: center;\n    padding: 5px;\n    color: #333;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  .event-title {\n    font-size: 10px;\n    text-align: center;\n    padding: 5px;\n    color: #777;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\ninterface CalendarProps {\n  events: Array<{ id: string; title: string; date: string }>;\n}\n\nexport const Calendar = ({ events }: CalendarProps) => {\n  // assuming events are sorted by date in ascending order\n  const startDate = new Date(events[0].date);\n  const endDate = new Date(events[events.length - 1].date);\n  const monthLength = endDate.getDate();\n  const firstDayOfMonth = new Date(\n    startDate.getFullYear(),\n    startDate.getMonth(),\n    1\n  ).getDay();\n\n  const calendarDays = [];\n  for (let i = 1; i <= monthLength; i++) {\n    calendarDays.push({ date: i });\n  }\n\n  return (\n    <CalendarWrapper>\n      <CalendarDay>Sun</CalendarDay>\n      <CalendarDay>Mon</CalendarDay>\n      <CalendarDay>Tue</CalendarDay>\n      <CalendarDay>Wed</CalendarDay>\n      <CalendarDay>Thu</CalendarDay>\n      <CalendarDay>Fri</CalendarDay>\n      <CalendarDay>Sat</CalendarDay>\n      {Array.from({ length: firstDayOfMonth }, (_, i) => (\n        <div key={`empty-${i}`} />\n      ))}\n      {calendarDays.map((day, i) => {\n        const date = new Date(\n          startDate.getFullYear(),\n          startDate.getMonth(),\n          i + 1\n        );\n        const eventsOnDate = events.filter(\n          (event) => event.date === date.toISOString().substr(0, 10)\n        );\n        return (\n          <CalendarDate key={`date-${i}`}>\n            {day.date}\n            {eventsOnDate.length > 0 && (\n              <div>\n                {eventsOnDate.map((event) => (\n                  <div key={event.id}>{event.title}</div>\n                ))}\n              </div>\n            )}\n          </CalendarDate>\n        );\n      })}\n    </CalendarWrapper>\n  );\n};\n\nexport default Calendar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}